{"version":3,"sources":["assets/images/logo.svg","constants/colors.ts","components/navbar/Navbar.tsx","components/imageDescription/imageDescription.tsx","components/imageCard/ImageCard.tsx","components/imageGrid/ImageGrid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Colors","useStyles","makeStyles","theme","createStyles","root","flexGrow","width","menuButton","marginRight","spacing","title","color","paddingLeft","fontWeight","textAlign","appBar","backgroundColor","maxHeight","navButton","Navbar","classes","className","AppBar","elevation","position","Toolbar","src","logo","alt","Typography","variant","padding","ImageDescription","props","useState","description","length","shortenedDescrip","setDescrip","component","substring","Button","onClick","minWidth","margin","flexBasis","media","height","ImageCard","useTheme","matches","useMediaQuery","breakpoints","up","Card","style","maxWidth","CardMedia","image","imageURL","CardContent","date","CardActions","IconButton","marginLeft","onLike","liked","display","flexFlow","justifyContent","alignItems","alignContent","ImageGrid","photos","setPhotos","loading","setLoading","updateLikeForImage","isLiked","updatedArray","forEach","x","localStorage","setItem","JSON","stringify","useEffect","cachedPhotosList","getItem","json","parse","fetch","process","then","response","console","log","loadedPhotos","match","push","key","CircularProgress","marginTop","map","App","paddingTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98fcdc8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3da5d96a.svg\";","export const Colors = {\n  primary: '#002F76',\n  offWhite: '#FDFCFC',\n}\n","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport logo from '../../assets/images/logo.svg'\nimport { Typography } from '@material-ui/core'\nimport { Colors } from '../../constants/colors'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      width: '100%',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      color: Colors.primary,\n      paddingLeft: 10,\n      fontWeight: 'bold',\n      textAlign: 'left',\n    },\n    appBar: {\n      backgroundColor: Colors.offWhite,\n      maxHeight: 60,\n    },\n    navButton: {\n      color: Colors.primary,\n      fontWeight: 'bold',\n    },\n  })\n)\n\nexport default function Navbar() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <AppBar elevation={1} position='fixed' className={classes.appBar}>\n        <Toolbar>\n          <img src={logo} alt='' />\n          <Typography variant='h6' className={classes.title}>\n            Spacestagram Challenge\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\n\ntype ImageDescripProps = {\n  description: string\n}\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 0,\n  },\n})\n\nexport default function ImageDescription(props: ImageDescripProps) {\n  const classes = useStyles()\n  const [shortenedDescrip, setDescrip] = useState(\n    props.description.length > 80 ? true : false\n  )\n\n  return (\n    <span>\n      <Typography variant='body2' component='p'>\n        {shortenedDescrip\n          ? props.description.substring(0, 80) + '...'\n          : props.description}\n      </Typography>\n      {shortenedDescrip ? (\n        <Button\n          className={classes.root}\n          onClick={() => {\n            setDescrip(false)\n          }}\n        >\n          See More\n        </Button>\n      ) : (\n        <Button\n          className={classes.root}\n          onClick={() => {\n            setDescrip(true)\n          }}\n        >\n          See Less\n        </Button>\n      )}\n    </span>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport ShareIcon from '@material-ui/icons/Share'\nimport IconButton from '@material-ui/core/IconButton'\nimport ImageDescription from '../imageDescription/imageDescription'\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: '20%',\n    margin: 15,\n    flexBasis: '100%',\n  },\n  media: {\n    height: '50vh',\n  },\n})\n\ntype ImageCardProps = {\n  imageURL: string\n  key: string\n  date: string\n  description: string\n  title: string\n  liked: boolean\n  onLike: (date: string, isLiked: boolean) => void\n}\n\nexport default function ImageCard(props: ImageCardProps) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n\n  function updateLiked() {\n    props.onLike(props.date, !props.liked)\n  }\n\n  return (\n    <Card\n      className={classes.root}\n      elevation={4}\n      style={matches ? { maxWidth: '50%' } : { maxWidth: '90%' }}\n    >\n      <CardMedia\n        className={classes.media}\n        image={props.imageURL}\n        title={props.title}\n      />\n      <CardContent>\n        <Typography variant='h6' component='h3'>\n          {props.title}\n        </Typography>\n        <Typography variant='subtitle2' component='h4'>\n          {props.date}\n        </Typography>\n        <ImageDescription description={props.description} />\n      </CardContent>\n\n      <CardActions>\n        <IconButton\n          style={{ marginLeft: 'auto' }}\n          aria-label='like the image'\n          onClick={() => {\n            updateLiked()\n          }}\n        >\n          <FavoriteIcon color={props.liked ? 'primary' : 'inherit'} />\n        </IconButton>\n      </CardActions>\n    </Card>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { ImageCard } from '..'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: '#fafafa',\n      flexGrow: 1,\n      width: '100%',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      alignContent: 'center',\n    },\n  })\n)\n\ntype ImageCardProps = {\n  imageURL: string\n  key: string\n  date: string\n  description: string\n  title: string\n  liked: boolean\n}\n\nexport default function ImageGrid() {\n  const classes = useStyles()\n\n  const [photos, setPhotos] = useState<Array<ImageCardProps>>([])\n  const [loading, setLoading] = useState(true)\n\n  function checkURL(url: string) {\n    return url.match(/\\.(jpeg|jpg|gif|png)$/) != null\n  }\n\n  function updateLikeForImage(date: string, isLiked: boolean) {\n    const updatedArray = [...photos]\n    updatedArray.forEach((x) => {\n      if (x.date === date) {\n        x.liked = isLiked\n      }\n    })\n    setPhotos(updatedArray)\n    localStorage.setItem('photos', JSON.stringify(photos))\n  }\n\n  useEffect(() => {\n    const cachedPhotosList = localStorage.getItem('photos')\n    if (cachedPhotosList && cachedPhotosList.length > 5) {\n      const json = JSON.parse(cachedPhotosList)\n      setPhotos(json)\n      setLoading(false)\n    } else {\n      fetch(\n        `https://api.nasa.gov/planetary/apod?start_date=2021-08-15&api_key=${process.env.REACT_APP_NASA_API_KEY}`\n      )\n        .then((response) => response.json())\n        .then((response) => {\n          console.log(response)\n          const loadedPhotos: Array<ImageCardProps> = []\n          response.forEach((x: any) => {\n            if (checkURL(x['url'])) {\n              loadedPhotos.push({\n                imageURL: x['url'],\n                key: x['date'],\n                title: x['title'],\n                date: x['date'],\n                description: x['explanation'],\n                liked: false,\n              })\n            }\n          })\n          setPhotos(loadedPhotos)\n          localStorage.setItem('photos', JSON.stringify(photos))\n          setLoading(false)\n        })\n    }\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      {!loading ? (\n        photos.map((x) => {\n          return (\n            <ImageCard\n              key={x.key}\n              imageURL={x.imageURL}\n              title={x.title}\n              date={x.date}\n              description={x.description}\n              onLike={updateLikeForImage}\n              liked={x.liked}\n            />\n          )\n        })\n      ) : (\n        <CircularProgress style={{ marginTop: '20%' }} />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport { Navbar, ImageGrid } from './components'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Navbar />\n      <div style={{ paddingTop: 80, backgroundColor: '#fafafa' }}>\n        <ImageGrid />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
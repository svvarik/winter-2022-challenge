{"version":3,"sources":["assets/images/logo.svg","constants/colors.ts","components/navbar/Navbar.tsx","components/imageDescription/imageDescription.tsx","components/imageCard/ImageCard.tsx","utils/dateUtils.ts","components/imageGrid/ImageGrid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Colors","useStyles","makeStyles","theme","createStyles","root","flexGrow","width","menuButton","marginRight","spacing","title","color","paddingLeft","fontWeight","textAlign","appBar","backgroundColor","maxHeight","navButton","Navbar","classes","className","AppBar","elevation","position","Toolbar","src","logo","alt","Typography","variant","padding","ImageDescription","props","useState","description","length","shortenedDescrip","setDescrip","component","substring","Button","onClick","minWidth","margin","flexBasis","media","height","ImageCard","useTheme","matches","useMediaQuery","breakpoints","up","Card","style","maxWidth","CardMedia","image","imageURL","CardContent","date","CardActions","IconButton","marginLeft","onLike","liked","fill","dateToNasaDateString","getFullYear","getMonth","getDate","nasaDateStringToDate","dateString","splitString","split","Date","parseInt","incrementNasaDateByFive","getTime","incrementDateByFive","incrementNasaDateBySix","incrementDateBySix","display","flexFlow","justifyContent","alignItems","alignContent","ImageGrid","useReducer","state","action","type","images","concat","fetching","startDate","endDate","imgData","imgDispatch","incrementedEndDate","now","endReached","dates","dateDispatch","updateLiked","key","forEach","x","push","useEffect","fetch","process","then","data","json","imgArray","catch","e","bottomBoundaryRef","useRef","scrollObserver","useCallback","node","IntersectionObserver","entries","en","intersectionRatio","observe","current","map","url","explanation","CircularProgress","marginTop","marginBottom","id","ref","App","paddingTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b44cea4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3da5d96a.svg\";","export const Colors = {\n  primary: '#002F76',\n  offWhite: '#FDFCFC',\n}\n","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport logo from '../../assets/images/logo.svg'\nimport { Typography } from '@material-ui/core'\nimport { Colors } from '../../constants/colors'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      width: '100%',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      color: Colors.primary,\n      paddingLeft: 10,\n      fontWeight: 'bold',\n      textAlign: 'left',\n    },\n    appBar: {\n      backgroundColor: Colors.offWhite,\n      maxHeight: 60,\n    },\n    navButton: {\n      color: Colors.primary,\n      fontWeight: 'bold',\n    },\n  })\n)\n\nexport default function Navbar() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <AppBar elevation={1} position='fixed' className={classes.appBar}>\n        <Toolbar>\n          <img src={logo} alt='' />\n          <Typography variant='h6' className={classes.title}>\n            Spacestagram Challenge\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\n\ntype ImageDescripProps = {\n  description: string\n}\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 0,\n  },\n})\n\nexport default function ImageDescription(props: ImageDescripProps) {\n  const classes = useStyles()\n  const [shortenedDescrip, setDescrip] = useState(\n    props.description.length > 80 ? true : false\n  )\n\n  return (\n    <span>\n      <Typography variant='body2' component='p'>\n        {shortenedDescrip\n          ? props.description.substring(0, 80) + '...'\n          : props.description}\n      </Typography>\n      {shortenedDescrip ? (\n        <Button\n          className={classes.root}\n          onClick={() => {\n            setDescrip(false)\n          }}\n        >\n          See More\n        </Button>\n      ) : (\n        <Button\n          className={classes.root}\n          onClick={() => {\n            setDescrip(true)\n          }}\n        >\n          See Less\n        </Button>\n      )}\n    </span>\n  )\n}\n","import React from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport IconButton from '@material-ui/core/IconButton'\nimport ImageDescription from '../imageDescription/imageDescription'\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: '20%',\n    margin: 15,\n    flexBasis: '100%',\n  },\n  media: {\n    height: '50vh',\n  },\n})\n\ntype ImageCardProps = {\n  imageURL: string\n  key: string\n  date: string\n  description: string\n  title: string\n  liked: boolean\n  onLike: (date: string, isLiked: boolean) => void\n}\n\nexport default function ImageCard(props: ImageCardProps) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.up('sm'))\n\n  function updateLiked() {\n    props.onLike(props.date, !props.liked)\n  }\n\n  return (\n    <Card\n      className={classes.root}\n      elevation={4}\n      style={matches ? { maxWidth: '50%' } : { maxWidth: '90%' }}\n    >\n      <CardMedia\n        className={classes.media}\n        image={props.imageURL}\n        title={props.title}\n      />\n      <CardContent>\n        <Typography variant='h6' component='h3'>\n          {props.title}\n        </Typography>\n        <Typography variant='subtitle2' component='h4'>\n          {props.date}\n        </Typography>\n        <ImageDescription description={props.description} />\n      </CardContent>\n\n      <CardActions>\n        <IconButton\n          style={{ marginLeft: 'auto' }}\n          aria-label='like the image'\n          onClick={() => {\n            updateLiked()\n          }}\n        >\n          <FavoriteIcon\n            style={props.liked ? { fill: '#FF3535' } : { fill: '#DBDBDB' }}\n          />\n        </IconButton>\n      </CardActions>\n    </Card>\n  )\n}\n","export function dateToNasaDateString(date: Date) {\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\n}\n\nexport function nasaDateStringToDate(dateString: string) {\n  const splitString = dateString.split('-')\n  return new Date(\n    parseInt(splitString[0]),\n    parseInt(splitString[1]) - 1,\n    parseInt(splitString[2])\n  )\n}\n\nexport function incrementDate(date: Date) {\n  return new Date(date.getTime() + 24 * 60 * 60 * 1000)\n}\n\nexport function incrementDateByFive(date: Date) {\n  return new Date(date.getTime() + 5 * 24 * 60 * 60 * 1000)\n}\n\nexport function incrementDateBySix(date: Date) {\n    return new Date(date.getTime() + 6 * 24 * 60 * 60 * 1000)\n  }\n\nexport function incrementNasaDate(dateString: string) {\n  const date = nasaDateStringToDate(dateString)\n  const incrementedDate = incrementDate(date)\n  return dateToNasaDateString(incrementedDate)\n}\n\nexport function incrementNasaDateByFive(dateString: string) {\n  const date = nasaDateStringToDate(dateString)\n  const incrementedDate = incrementDateByFive(date)\n  return dateToNasaDateString(incrementedDate)\n}\n\nexport function incrementNasaDateBySix(dateString: string) {\n    const date = nasaDateStringToDate(dateString)\n    const incrementedDate = incrementDateBySix(date)\n    return dateToNasaDateString(incrementedDate)\n  }\n\nexport function isGreaterThanToday(dateString: string) {\n  return nasaDateStringToDate(dateString).getTime() > Date.now()\n}\n\n","import React, { useCallback, useEffect, useReducer, useRef } from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { ImageCard } from '..'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { dateToNasaDateString } from '../../utils'\nimport {\n  incrementNasaDateByFive,\n  incrementNasaDateBySix,\n  isGreaterThanToday,\n} from '../../utils/dateUtils'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: '#fafafa',\n      flexGrow: 1,\n      width: '100%',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      alignContent: 'center',\n    },\n  })\n)\n\nexport default function ImageGrid() {\n  const classes = useStyles()\n\n  const imgReducer = (state: any, action: any) => {\n    switch (action.type) {\n      case 'ADD_IMAGES':\n        return { ...state, images: state.images.concat(action.images) }\n      case 'FETCHING_IMAGES':\n        return { ...state, fetching: action.fetching }\n      case 'UPDATE_IMAGES':\n        return { ...state, images: action.images }\n      case 'INCREMENT_DATE':\n        return {\n          ...state,\n          startDate: incrementNasaDateByFive(state.startDate),\n          endDate: incrementNasaDateByFive(state.endDate),\n        }\n      default:\n        return state\n    }\n  }\n  const dateReducer = (state: any, action: any) => {\n    switch (action.type) {\n      case 'INCREMENT_DATE':\n        const incrementedEndDate = incrementNasaDateBySix(state.endDate)\n\n        if (isGreaterThanToday(incrementedEndDate)) {\n          return {\n            ...state,\n            startDate: incrementNasaDateBySix(state.startDate),\n            endDate: dateToNasaDateString(new Date()),\n            endReached: true,\n          }\n        } else {\n          return {\n            ...state,\n            startDate: incrementNasaDateBySix(state.startDate),\n            endDate: incrementNasaDateBySix(state.endDate),\n          }\n        }\n      default:\n        return state\n    }\n  }\n\n  const [imgData, imgDispatch] = useReducer(imgReducer, {\n    images: [],\n    fetching: true,\n  })\n\n  const [dates, dateDispatch] = useReducer(dateReducer, {\n    startDate: '2021-08-02',\n    endDate: incrementNasaDateByFive('2021-08-02'),\n    endReached: false,\n  })\n\n  function updateLiked(key: string, liked: boolean) {\n    const images: Array<any> = []\n    imgData.images.forEach((x: any) => {\n      if (x.date === key) {\n        x.liked = liked\n      }\n      images.push(x)\n    })\n    imgDispatch({ type: 'UPDATE_IMAGES', images: images })\n  }\n\n  useEffect(() => {\n    imgDispatch({ type: 'FETCHING_IMAGES', fetching: true })\n    fetch(\n      `https://api.nasa.gov/planetary/apod?start_date=${dates.startDate}&end_date=${dates.endDate}&api_key=${process.env.REACT_APP_NASA_API_KEY2}`\n    )\n      .then((data) => data.json())\n      .then((imgArray) => {\n        imgArray.forEach((x: any) => {\n          x['liked'] = false\n        })\n        imgDispatch({ type: 'ADD_IMAGES', images: imgArray })\n        imgDispatch({ type: 'FETCHING_IMAGES', fetching: false })\n      })\n      .catch((e) => {\n        // handle error\n        imgDispatch({ type: 'FETCHING_IMAGES', fetching: false })\n        return e\n      })\n  }, [imgDispatch, dates.endDate])\n\n  let bottomBoundaryRef = useRef(null)\n  const scrollObserver = useCallback(\n    (node) => {\n      new IntersectionObserver((entries) => {\n        entries.forEach((en) => {\n          if (en.intersectionRatio > 0 && !dates.endReached) {\n            dateDispatch({ type: 'INCREMENT_DATE' })\n          }\n        })\n      }).observe(node)\n    },\n    [dateDispatch, dates.endReached]\n  )\n  useEffect(() => {\n    if (bottomBoundaryRef.current) {\n      scrollObserver(bottomBoundaryRef.current)\n    }\n  }, [scrollObserver, bottomBoundaryRef])\n\n  return (\n    <div className={classes.root}>\n      {imgData.images.map((x: any) => {\n        return (\n          <ImageCard\n            key={x.date}\n            imageURL={x.url}\n            title={x.title}\n            date={x.date}\n            description={x.explanation}\n            liked={x.liked}\n            onLike={updateLiked}\n          />\n        )\n      })}\n\n      {imgData.fetching ? (\n        <div\n          style={{\n            backgroundColor: '#fafafa',\n            flexBasis: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          <CircularProgress style={{ marginTop: 40, marginBottom: 40 }} />\n        </div>\n      ) : null}\n      {dates.endReached ? (\n        <div\n          style={{\n            backgroundColor: '#fafafa',\n            flexBasis: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          <p>You've caught up to today!</p>\n        </div>\n      ) : null}\n      <div\n        id='page-bottom-boundary'\n        style={{ width: '100%' }}\n        ref={bottomBoundaryRef}\n      ></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport { Navbar, ImageGrid } from './components'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Navbar />\n      <div style={{ paddingTop: 80, backgroundColor: '#fafafa' }}>\n        <ImageGrid />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}